select ts, id_station, <sid> FROM d1 where id_station in <stid> AND  ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L
select ts, id_station, <sid> FROM d1 where id_station in <stid> AND  ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L and <sfilter>;
SELECT id_station, <avg_s> FROM d1 WHERE  ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L AND id_station in <stid> GROUP BY id_station;
SELECT id_station, ts, <avg_s> FROM d1 WHERE ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L AND id_station in <stid> SAMPLE BY 1h;
SELECT id_station, ts, <avg_s> FROM d1 WHERE  ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L AND id_station in <stid> SAMPLE BY 5s FILL(LINEAR) GROUP BY ts, id_station ORDER BY ts;
with data1 as ( select ts, s<sid1> as s_1 from d1 WHERE ts > TIMESTAMP '<timestamp>' - <nb>*<rangesUnit>* 1000000L AND ts < TIMESTAMP '<timestamp>' AND id_station='st<stid1>' ), data2 as ( select ts, s<sid2> as s_2 from d1 WHERE ts > TIMESTAMP '<timestamp>' - <nb>*<rangesUnit>* 1000000L AND ts < TIMESTAMP '<timestamp>' AND id_station='st<stid2>' ) select data1.ts, s_1, s_2, (s_1 + s_2)/2 as avg from data1 CROSS JOIN data2 where data1.ts = data2.ts;
SELECT ((SUM(s<sid1> * s<sid2>) - (SUM(s<sid1>) * SUM(s<sid2>)) / COUNT())) / (SQRT(SUM(s<sid1> * s<sid1>) - (SUM(s<sid1>) * SUM (s<sid1>)) / COUNT()) * SQRT(SUM(s<sid2> * s<sid2>) - (SUM(s<sid2>) * SUM(s<sid2>)) / COUNT() )) AS pearson_corr FROM d1 WHERE  id_station='st<stid>' AND ts < '<timestamp>' AND ts >  '<timestamp>' - <nb>*<rangesUnit>* 1000000L
